@using Goblin.Narfu
@model IEnumerable<IGrouping<int, Goblin.Domain.Entities.BotUser>>
@inject NarfuApi NarfuApi;

@{
    ViewData["Title"] = "Список пользователей";
}

<h2>
    @ViewData["Title"] <span class="badge badge-secondary">@ViewData["count"]</span>
</h2>
<table class="table table-striped table-bordered">
    <thead class="thead-dark">
    <tr>
        <th>Vk ID</th>
        <th>Admin?</th>
        <th>Schedule?</th>
        <th>Weather?</th>
        <th>City</th>
    </tr>
    </thead>
    <tbody>
    @foreach(var group in Model)
    {
        var gr = NarfuApi.Students.GetGroupByRealId(group.Key);
        var narfuGroup = gr?.SiteId ?? 0;
        var groupName = gr is null ? "" : gr.Name;
        <tr class="table-info">
            <td colspan="6">
                @if(narfuGroup != 0)
                {
                    <a href="https://ruz.narfu.ru/?timetable&group=@gr?.SiteId" target="_blank">
                        <b>@gr?.RealId</b> - @groupName
                    </a>
                }
                else
                {
                    <p>Группа не установлена</p>
                }
            </td>
        </tr>
        foreach(var user in group)
        {
            var url = $"https://vk.com/id{user.Id}";
            <tr>
                <td>
                    <a href="@url" target="_blank">@user.Id</a>
                </td>
                <td>@user.IsAdmin</td>
                <td>@user.HasScheduleSubscription</td>
                <td>@user.HasWeatherSubscription</td>
                <td>@user.WeatherCity</td>
            </tr>
        }
    }
    </tbody>
</table>