// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Goblin.DataAccess.Migrations
{
    [DbContext(typeof(BotDbContext))]
    internal class BotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                    .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                    .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                    .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Goblin.Domain.Entities.BotUser", b =>
            {
                b.Property<long>("VkId");

                b.Property<bool>("IsAdmin")
                 .ValueGeneratedOnAdd()
                 .HasDefaultValue(false);

                b.Property<bool>("IsErrorsEnabled")
                 .ValueGeneratedOnAdd()
                 .HasDefaultValue(true);

                b.Property<int>("NarfuGroup")
                 .ValueGeneratedOnAdd()
                 .HasDefaultValue(0);

                b.Property<string>("WeatherCity")
                 .ValueGeneratedOnAdd()
                 .HasMaxLength(100)
                 .HasDefaultValue("");

                b.HasKey("VkId");

                b.ToTable("BotUsers");
            });

            modelBuilder.Entity("Goblin.Domain.Entities.CronJob", b =>
            {
                b.Property<int>("Id")
                 .ValueGeneratedOnAdd();

                b.Property<int>("Hours");

                b.Property<int>("Minutes");

                b.Property<string>("Name")
                 .IsRequired();

                b.Property<int>("NarfuGroup")
                 .ValueGeneratedOnAdd()
                 .HasDefaultValue(0);

                b.Property<long>("VkId");

                b.Property<string>("WeatherCity")
                 .ValueGeneratedOnAdd()
                 .HasDefaultValue("");

                b.HasKey("Id");

                b.ToTable("CronJobs");
            });

            modelBuilder.Entity("Goblin.Domain.Entities.Remind", b =>
            {
                b.Property<int>("Id")
                 .ValueGeneratedOnAdd();

                b.Property<long>("BotUserId");

                b.Property<DateTime>("Date");

                b.Property<string>("Text")
                 .IsRequired()
                 .HasMaxLength(100);

                b.HasKey("Id");

                b.HasIndex("BotUserId");

                b.ToTable("Reminds");
            });

            modelBuilder.Entity("Goblin.Domain.Entities.Subscribe", b =>
            {
                b.Property<int>("Id")
                 .ValueGeneratedOnAdd();

                b.Property<long>("BotUserId");

                b.Property<bool>("IsSchedule")
                 .ValueGeneratedOnAdd()
                 .HasDefaultValue(false);

                b.Property<bool>("IsWeather")
                 .ValueGeneratedOnAdd()
                 .HasDefaultValue(false);

                b.HasKey("Id");

                b.HasIndex("BotUserId")
                 .IsUnique();

                b.ToTable("Subscribes");
            });

            modelBuilder.Entity("Goblin.Domain.Entities.Remind", b =>
            {
                b.HasOne("Goblin.Domain.Entities.BotUser", "BotUser")
                 .WithMany("Reminds")
                 .HasForeignKey("BotUserId")
                 .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("Goblin.Domain.Entities.Subscribe", b =>
            {
                b.HasOne("Goblin.Domain.Entities.BotUser", "BotUser")
                 .WithOne("SubscribeInfo")
                 .HasForeignKey("Goblin.Domain.Entities.Subscribe", "BotUserId")
                 .OnDelete(DeleteBehavior.Cascade);
            });
#pragma warning restore 612, 618
        }
    }
}